[config]
# Date format used to format postings in the ledger file. Output
# statements will use this format as well. Default uses ledger-cli
# format but it can be set to "%Y-%m-%d" for example to support
# hledger output format
ledger_date_format = "%Y/%m/%d"
# Path to ledger file can be set here and then ommitted from future
# invocations of mono2ledger
ledger_file = "~/.local/share/ledger/journal.ledger"
# mono2ledger by default fetches statements for all accounts which
# may take quite a while to finish so this can be used to ignore
# accounts that are expected to not have any useful statements in
# them. mono2ledger will show warning when this is unset and warning
# can be suppressed by setting this to empty list ([])
ignored_accounts = ["thei3oovauHoZ7Foopongoh", "zunatoh8gah8iYahj1eoGae"]
# payee that will be set for cross-card transactions that
# mono2ledger detects
transfer_payee = "Withdraw"
# command that to run to obtain API key. It should print a single
# line stdout which will be used as api key. Note that this does not
# use shell so if some processing of output needed with e.g. pipes
# or redirection then this can be set to something like
# "bash -c '<your command>'"
api_key_command = "pass show monobank"
# When set to true remove leading zeroes from amounts
# e.g. converting amounts like 100.00 to 100. Default is false
trim_leading_zeroes = false
# These options control payee, income and expense account that will
# be used when recording cashback
cashback_payee = "Free money"
cashback_ledger_asset_account = "Assets:Mono:Cashback"
cashback_ledger_income_account = "Income:Mono:Cashback"
# Or disable recording of cashback altogether by setting
# record_cashback to false
record_cashback = false

# Mapping to associate id of accounts as returned by monobank API
# with ledger account names. Ensure the keys are quoted in case
# they contain special symbols
[accounts]
shahquai5wiveiro3oReine = "Assets:Mono:Black"
"!aetah6taiphaid4eicieTh7" = "Assets:Mono:FOP"

# Each matcher defines a predicate on how statement is matched and
# values that will be used when printing this statement. Cross-card
# statements do not use matchers only relying on values defined in
# accounts.
[[match]]
# Payee that will be used for journal entry
# Default is to use statement description
payee = "Groceries"
# ledger account to use as destination of funds
ledger_account = "Expenses:Groceries"
# This suffix will be added to ledger account name
source_ledger_account_suffix = ":Groceries"
# Setting ignore to true means that matched statement will not be printed
ignore = false
# List of integers to match MCC of statement
mcc_match = [5399, 5411, 5499]
# A regular expression to match description of statement
# May be either a single regular expression or a list
# Defining both MCC and description means that they both
# should match
description_regex = "Metro"

# Categories allow defining default values to use for
# matchers. Use them by adding "category" key to match with name
# of defined category
[categories.food]
ledger_account = "Expenses:Food"
source_ledger_account_suffix = ":Saved:Food"

[[match]]
category = "food"
payee = "Niva"
description_regex = ["Niva", "Нива"]

# Statements are matched sequentially in order they are defined
# so more broad matchers should be put at the end of file
[[match]]
payee = "Unknown"
description_regex = ".*"
